<?php

/**
 * @file
 * Functions to support theming in the veedol theme.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Template\Attribute;
use Drupal\Core\Render\Element;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 *
 * Adds body classes if certain regions have content.
 */
function veedol_preprocess_html(&$variables) {

  //$variables['attributes']['class'][] = 'class-name';
  //echo '<pre>'; print_r($variables); exit;
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $content_type = $node->bundle();
    if($content_type == 'products') {
      $variables['attributes']['class'][] = 'products';
    } elseif($node->nid->value == 46) {
      $variables['attributes']['class'][] = 'vid-gallery';
    } elseif($node->nid->value == 275) {
      $variables['attributes']['class'][] = 'investors';
    } else {
      $temp = explode('|', $variables['head_title']['title']);
      $class = strtolower(str_replace(' ', '-', trim($temp[0])));
      //$class = strtolower(str_replace(',', ' ', trim($temp[0])));
      $variables['attributes']['class'][] = $class;
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for page.
 */

function veedol_preprocess_page(&$variables) {
  // code to get value...
  ini_set('memory_limit','-1');
  if (isset($node) && $node instanceof Node) {
     // Create variable out of the current node type
    $node_type = $node->getType();
    // Remove page title block.
    if (($node_type == 'page') || ($node_type == 'article')) {
      unset($variables['page']['content']['veedol_page_title']);
    }
  }

}

/**
 * Implements hook_preprocess_HOOK() for page title templates.
 */
function veedol_preprocess_page_title(&$variables) {
  if (($node_type == 'page')) {
    unset($variables['page']['content']['veedol_page_title']);
  }

}

/**
   * Implements hook_theme_suggestions_HOOK_alter().
   */
  function veedol_theme_suggestions_page_alter(array &$suggestions, array $variables) {
    if ($node = \Drupal::routeMatch()->getParameter('node')) {
      $content_type = $node->bundle();
      if($node->nid->value == 18) {
        $suggestions[] = 'page__company_profile';
      } elseif($node->nid->value == 25) {
        $suggestions[] = 'page__find_distributors';
      } elseif($node->nid->value == 26) {
        $suggestions[] = 'page__company_contact';
      } elseif($node->nid->value == 28) {
        $suggestions[] = 'page__locator';
      } elseif($node->nid->value == 29) {
        $suggestions[] = 'page__plant_locator';
      } elseif($node->nid->value == 30) {
        $suggestions[] = 'page__locator';
      } elseif($node->nid->value == 33) {
        $suggestions[] = 'page__lubricant';
      } elseif($node->nid->value == 39 || $node->nid->value == 44 || $node->nid->value == 276) {
        $suggestions[] = 'page__financialresults';
      } elseif($node->nid->value == 46) {
        $suggestions[] = 'page__video_gallery';
      } elseif($node->nid->value == 48) {
        $suggestions[] = 'page__snippets';
      } elseif($node->nid->value == 274) {
        $suggestions[] = 'page__brand_heritage';
      } else {
        $suggestions[] = 'page__'.$node->bundle();
      }

    }

    if (\Drupal::routeMatch()->getRouteName() == 'entity.taxonomy_term.canonical' && $tid = \Drupal::routeMatch()->getRawParameter('taxonomy_term')) {
      $term = Term::load($tid);
      $suggestions[] = 'page__taxonomy__' . $term->getVocabularyId();
    }

  }

  function veedol_theme_suggestions_node_alter(array &$suggestions, array $variables) {
    if ($node = \Drupal::routeMatch()->getParameter('node')) {
      $content_type = $node->bundle();
      if($node->nid->value == 7) {
        $suggestions[] = 'node__ourwork';
      }

    }
  }


/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
function veedol_preprocess_node(&$variables) {
  // Remove the "Add new comment" link on teasers or when the comment form is
  // displayed on the page.
  if ($variables['teaser'] || !empty($variables['content']['comments']['comment_form'])) {
    unset($variables['content']['links']['comment']['#links']['comment-add']);
  }
  //echo '<pre>'; var_dump($variables['content']['body'][0]['#text']);exit;




}

/**
 * Implements hook_preprocess_HOOK() for block.html.twig.
 */
function veedol_preprocess_block(&$variables) {
  // Add a clearfix class to system branding blocks.
  if ($variables['plugin_id'] == 'system_branding_block') {
    $variables['attributes']['class'][] = 'clearfix';
  }

  //echo $variables['attributes']['id'] ;
}



/**
 * Implements hook_preprocess_HOOK() for menu.html.twig.
 */
function veedol_preprocess_menu(&$variables) {
  $variables['attributes']['class'][] = 'clearfix';
}

function veedol_page_attachments_alter(array &$attachments) {
  foreach ($attachments['#attached']['html_head'] as $key => $attachment) {
    if ($attachment[1] == 'system_meta_generator') {
      unset($attachments['#attached']['html_head'][$key]);
    }
  }
}

/*function veedol_form_search_block_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['#attributes']['class'][] = 'form-search';
  $form['keys']['#attributes']['class'] = array('form-control');
  $form['keys']['#attributes']['name'] = 's' ;
  //$form['keys']['#attributes']['placeholder'] = t( 'Search' );
  //$form['actions']['submit']['#attributes']['class'] = array('d-none');
  //$form['actions']['submit']['#suffix'] = '<i class="iconx-search"></i>';
}*/

/**
 * @param $suggestions
 * @param array $variables
 */
/*function veedol_theme_suggestions_input_alter(&$suggestions, array $variables) {
  $element = $variables['element'];

  if (isset($element['#attributes']['data-twig-suggestion'])) {
    $suggestions[] = 'input__' . $element['#type'] . '__' . $element['#attributes']['data-twig-suggestion'];
  }
}*/

/**
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param $form_id
 */
/*function veedol_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form['#id'] == 'search-block-form') {
    $form['actions']['submit']['#attributes']['data-twig-suggestion'] = 'search_results_submit';
    $form['actions']['submit']['#attributes']['class'][] = 'search-box__button';
  }
}*/
